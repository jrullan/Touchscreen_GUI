Todo 2015-04-06:


===DONE===
1. Create new class: Indicator
This class will be the parent class of Dial and Gauge classes. It will 
refactor these classes operations and attributes to minimize the
duplicate methods and attributes.
	Methods:
		1. getCV   x
		2. setCV   x
		3. show    x
		4. checkTouch  x
		5. setLimits   x
		6. setHiLimit  x
		7. setLowLimit x
		8. clear	 x
		9. init		 x
		10. update x
	Attributes:
		1. hiLimit  x
		2. lowLimit  x
		3. hiLimitColor  x
		4. lowLimitColor  x
		5. setpoint  x
		6. currentValue  x
		7. previousValue x
======
	
2. Eliminate the isButton method from the Widget class and replace by a public attribute
isButton.

3. Use the scope resolution operator :: to access the parent method
and then extend the method in the child class by including additional 
and specific code.
	Example:
	
	class Indicator{
		
		void init(){
			...
		}
	}
	
	
	class Dial: public Indicator{
	
		void init(){
			Indicator::init();
			...//additional code
		}
	}

4. Refactor: Canvas.pop() to remove the Numkey. If I can find a way to call a Numkey.close() method instead
it will be better for usability and to prevent popping other controls accidentally.
This will require a way for the Numkey widget to get a pointer to it's canvas.
